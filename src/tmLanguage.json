{
  "name": "CoTFea",
  "scopeName": "source.cotfea",
  "patterns": [
    {
      "name": "comment.block.cotfea",
      "begin": "(?<!#)#{3}(?!#)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.coffee"
        }
      },
      "end": "#{3}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.comment.coffee"
        }
      },
      "patterns": [
        {
          "name": "comment.block.content.cotfea",
          "match": "(.*).",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.coffee"
            }
          }
        }
      ]
    },
    {
      "name": "comment.line.number-sign.cotfea",
      "begin": "#",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.coffee"
        }
      },
      "end": "$"
    },
    {
      "include": "#signle_quoted_string"
    },
    {
      "include": "#double_quoted_string"
    },
    {
      "name": "string.quoted.single.heredoc.cotfea",
      "begin": "'''",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.coffee"
        }
      },
      "end": "'''",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.coffee"
        }
      }
    },
    {
      "name": "string.quoted.double.heredoc.cotfea",
      "begin": "\"\"\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.coffee"
        }
      },
      "end": "\"\"\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.coffee"
        }
      }
    },
    {
      "begin": "{",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.curly.coffee"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "meta.brace.curly.coffee"
        }
      }
    },
    {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "keyword.operator.assignment.compound.coffee"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "keyword.operator.assignment.compound.coffee"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.coffee"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.coffee"
        }
      }
    },
    {
      "name": "meta.definition.array.sign.cotfea",
      "begin": "(?<=^\\s*)-",
      "beginCaptures": {
        "0": {
          "name": "keyword.operator.assignment.compound.coffee"
        }
      },
      "end": "\\s"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "double_quoted_string": {
      "patterns": {
        "name": "string.quoted.double.coffee",
        "begin": "\"",
        "beginCaptures": {
          "0": {
            "name": "punctuation.definition.string.begin.coffee"
          }
        },
        "end": "\"",
        "endCaptures": {
          "0": {
            "name": "punctuation.definition.string.end.coffee"
          }
        }
      }
    },
    "single_quoted_string": {
      "patterns": {
        "name": "string.quoted.single.coffee",
        "begin": "'",
        "beginCaptures": {
          "0": {
            "name": "punctuation.definition.string.begin.coffee"
          }
        },
        "end": "'",
        "endCaptures": {
          "0": {
            "name": "punctuation.definition.string.end.coffee"
          }
        }
      }
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.coffee",
          "match": "\\b(?<!\\$)0(x|X)[0-9a-fA-F]\\b(?!\\$)"
        },
        {
          "name": "constant.numeric.binary.coffee",
          "match": "\\b(?<!\\$)0(b|B)[01]+\\b(?!\\$)"
        },
        {
          "name": "constant.numeric.octal.coffee",
          "match": "\\b(?<!\\$)0(o|O)?[0-7]+\\b(?!\\$)"
        },
        {
          "match": "(?<!x)(?<!\\$)(?:(?:\\b[0-9]+(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|(?:\\b[0-9]+(\\.)[eE][+-]?[0-9]+\\b)|(?:\\b(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|(?:\\b[0-9]+[eE][+-]?[0-9]+\\b)|(?:\\b[0-9]+(\\.)[0-9]+\\b)|(?:\\b[0-9]+(?=\\.{2, 3}))|(?:\\b[0-9]+(\\.)\\b)|(?:\\b(\\.)[0-9]+\\b))(?:\\b[0-9]+\\b(?!\\.))",
          "captures": {
            "0": {
              "name": "constant.numeric.decimal.coffee"
            },
            "1": {
              "name": "punctuation.separator.decimal.period.coffee"
            },
            "2": {
              "name": "punctuation.separator.decimal.period.coffee"
            },
            "3": {
              "name": "punctuation.separator.decimal.period.coffee"
            },
            "4": {
              "name": "punctuation.separator.decimal.period.coffee"
            },
            "5": {
              "name": "punctuation.separator.decimal.period.coffee"
            },
            "6": {
              "name": "punctuation.separator.decimal.period.coffee"
            }
          }
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "(?:([a-zA-Z$_][\\w$]*)?\\s+|(?<![\\w$]))(and=|or=)",
          "captures": {
            "1": {
              "name": "variable.assignment.coffee"
            },
            "2": {
              "name": "keyword.operator.assignment.compound.coffee"
            }
          }
        }
      ]
    }
  }
}
